diff --git a/src/schema.rs b/src/schema.rs
index 16a153d..a3404c7 100644
--- a/src/schema.rs
+++ b/src/schema.rs
@@ -1,6 +1,21 @@
+// This file is autogenerated.
+// Do not edit it manually. Consider editing `diesel.toml`
+// ref: https://diesel.rs/guides/configuring-diesel-cli.html
+//
+// Steps to create proper schema.patch file:
+// - Add new migration file
+// - Add new tables to diesel.toml if applicable
+// - Comment patch line in diesel.toml
+// - `diesel migration run`
+// - (new tables/items appeared in DB, schema.rs is updated)
+// - `git add src/schema.rs && git commit -m "bad schema"`
+// - Fix schema.rs, it should look exactly like you want, it should not produce any warnings.
+// - git diff -U6 src/schema.rs > src/schema.patch
+// - Uncomment patch line
+
 table! {
     use diesel::sql_types::*;
     use crate::models::enums::*;
 
     access_keys (public_key, account_id) {
         public_key -> Text,
@@ -30,13 +45,12 @@ table! {
         index_in_block -> Int4,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     accounts (id) {
         id -> Int8,
         account_id -> Text,
         created_by_receipt_id -> Nullable<Text>,
         deleted_by_receipt_id -> Nullable<Text>,
@@ -58,47 +72,44 @@ table! {
         receipt_included_in_block_timestamp -> Numeric,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     action_receipt_input_data (input_data_id, input_to_receipt_id) {
         input_data_id -> Text,
         input_to_receipt_id -> Text,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     action_receipt_output_data (output_data_id, output_from_receipt_id) {
         output_data_id -> Text,
         output_from_receipt_id -> Text,
         receiver_account_id -> Text,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     action_receipts (receipt_id) {
         receipt_id -> Text,
         signer_account_id -> Text,
         signer_public_key -> Text,
         gas_price -> Numeric,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
+    #[allow(non_snake_case)]
     aggregated__circulating_supply (computed_at_block_hash) {
         computed_at_block_timestamp -> Numeric,
         computed_at_block_hash -> Text,
         circulating_tokens_supply -> Numeric,
         total_tokens_supply -> Numeric,
         total_lockup_contracts_count -> Int4,
@@ -109,12 +120,13 @@ table! {
 }
 
 table! {
     use diesel::sql_types::*;
     use crate::models::enums::*;
 
+    #[allow(non_snake_case)]
     assets__fungible_token_events (emitted_for_receipt_id, emitted_at_block_timestamp, emitted_in_shard_id, emitted_index_of_event_entry_in_shard, emitted_by_contract_account_id, amount, event_kind, token_old_owner_account_id, token_new_owner_account_id, event_memo) {
         emitted_for_receipt_id -> Text,
         emitted_at_block_timestamp -> Numeric,
         emitted_in_shard_id -> Numeric,
         emitted_index_of_event_entry_in_shard -> Int4,
         emitted_by_contract_account_id -> Text,
@@ -127,12 +139,13 @@ table! {
 }
 
 table! {
     use diesel::sql_types::*;
     use crate::models::enums::*;
 
+    #[allow(non_snake_case)]
     assets__non_fungible_token_events (emitted_for_receipt_id, emitted_at_block_timestamp, emitted_in_shard_id, emitted_index_of_event_entry_in_shard, emitted_by_contract_account_id, token_id, event_kind, token_old_owner_account_id, token_new_owner_account_id, token_authorized_account_id, event_memo) {
         emitted_for_receipt_id -> Text,
         emitted_at_block_timestamp -> Numeric,
         emitted_in_shard_id -> Numeric,
         emitted_index_of_event_entry_in_shard -> Int4,
         emitted_by_contract_account_id -> Text,
@@ -142,15 +155,24 @@ table! {
         token_new_owner_account_id -> Text,
         token_authorized_account_id -> Text,
         event_memo -> Text,
     }
 }
 
+table! {
+     use diesel::sql_types::*;
+    #[allow(non_snake_case)]
+    aggregated__lockups(account_id) {
+        account_id -> Text,
+        creation_block_height -> Nullable<Numeric>,
+        deletion_block_height -> Nullable<Numeric>,
+    }
+}
+
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     blocks (block_hash) {
         block_height -> Numeric,
         block_hash -> Text,
         prev_block_hash -> Text,
         block_timestamp -> Numeric,
@@ -159,13 +181,12 @@ table! {
         author_account_id -> Text,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     chunks (chunk_hash) {
         included_in_block_hash -> Text,
         chunk_hash -> Text,
         shard_id -> Numeric,
         signature -> Text,
@@ -174,24 +195,22 @@ table! {
         author_account_id -> Text,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     data_receipts (data_id) {
         data_id -> Text,
         receipt_id -> Text,
         data -> Nullable<Bytea>,
     }
 }
 
 table! {
     use diesel::sql_types::*;
-    use crate::models::enums::*;
 
     execution_outcome_receipts (executed_receipt_id, index_in_execution_outcome, produced_receipt_id) {
         executed_receipt_id -> Text,
         index_in_execution_outcome -> Int4,
         produced_receipt_id -> Text,
     }
